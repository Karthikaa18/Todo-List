{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","key","value","this","setState","id","Math","random","slice","push","updatedList","filter","item","className","type","placeholder","onChange","e","updateInput","target","onClick","addItem","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOA0FeA,E,kDArFb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAEDC,MAAM,CACTC,QAAQ,GACRC,KAAK,IALS,E,+CASlB,SAAYC,EAAKC,GAEfC,KAAKC,SAAL,eACGH,EAAMC,M,qBAIX,WAEE,IAAMH,EAAU,CACdM,GAAI,EAAEC,KAAKC,SACXL,MAAOC,KAAKL,MAAMC,QAAQS,SAItBR,EAAI,YAAOG,KAAKL,MAAME,MAG5BA,EAAKS,KAAKV,GAGVI,KAAKC,SAAS,CACZJ,OACAD,QAAQ,O,wBAGZ,SAAWM,GAET,IAGMK,EAHI,YAAOP,KAAKL,MAAME,MAGHW,QAAO,SAAAC,GAAI,OAAIA,EAAKP,KAAOA,KAEpDF,KAAKC,SAAS,CAACJ,KAAMU,M,oBAEvB,WAAU,IAAD,OACP,OACE,qBAAKG,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACG,oBAAIA,UAAU,UAAd,4BACD,uBACA,uBACEA,UAAU,QACVC,KAAK,OACLC,YAAY,iBACZb,MAAOC,KAAKL,MAAMC,QAClBiB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAY,UAAUD,EAAEE,OAAOjB,UAErD,uBACA,wBACEkB,QAAS,kBAAM,EAAKC,WACpBR,UAAU,UAFZ,iBAMA,oBAAIA,UAAU,OAAd,SACGV,KAAKL,MAAME,KAAKsB,KAAI,SAAAV,GACnB,OACE,qBAAkBC,UAAU,QAA5B,UACGD,EAAKV,MACN,wBACEW,UAAU,UACVO,QAAS,kBAAM,EAAKG,WAAWX,EAAKP,KAFtC,iBAFOO,EAAKP,kB,GApEZmB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.ec0bcf4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport './App.css';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n\n  updateInput(key, value){\n    //update react state\n    this.setState({\n      [key]: value\n    });\n  }\n\n  addItem() {\n    //create item with unique id\n    const newItem = {\n      id: 1+Math.random(),\n      value: this.state.newItem.slice()\n    };\n\n    //copy of current list of items\n    const list = [...this.state.list];\n\n    //add new item to the list\n    list.push(newItem);\n\n    //update state with new list and reset newItem input\n    this.setState({\n      list,\n      newItem:\"\"\n    });\n  }\n  deleteItem(id){\n    //copy current list of items\n    const list = [...this.state.list];\n\n    //filter out item being deleted\n    const updatedList = list.filter(item => item.id !== id);\n\n    this.setState({list: updatedList});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"TodoApp\">\n           <h1 className=\"heading\">Add an item...</h1>\n          <br/>\n          <input\n            className=\"Input\"\n            type=\"text\"\n            placeholder=\"Type item here\"\n            value={this.state.newItem}\n            onChange={e => this.updateInput(\"newItem\",e.target.value)}\n          />\n          <br/>\n          <button\n            onClick={() => this.addItem()}\n            className=\"button1\"\n          >\n            Add\n          </button>\n          <ul className=\"list\">\n            {this.state.list.map(item => {\n              return(\n                <li key={item.id} className=\"list1\">\n                  {item.value}\n                  <button\n                    className=\"button2\"\n                    onClick={() => this.deleteItem(item.id)}\n                  >\n                    X\n                  </button> \n                </li>           \n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}